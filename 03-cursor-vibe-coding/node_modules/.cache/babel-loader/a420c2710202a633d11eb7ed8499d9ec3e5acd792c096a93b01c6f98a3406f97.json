{"ast":null,"code":"var _jsxFileName = \"/Users/igyeole/Desktop/fastcampus/workspace/03-cursor-vibe-coding/src/pages/BoardPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useCallback, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport Board from '../components/board/Board';\nimport Button from '../components/common/Button';\nimport { useToast } from '../components/common/Toast';\nimport useBoardStore from '../store/boardStore';\nimport { supabase } from '../lib/supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardPage = () => {\n  _s();\n  const {\n    slug\n  } = useParams();\n  const {\n    showToast,\n    ToastComponent\n  } = useToast();\n  const [realtimeStatus, setRealtimeStatus] = useState('DISCONNECTED');\n  const {\n    currentBoard,\n    fetchBoardData,\n    isLoading,\n    error\n  } = useBoardStore();\n  const handleFetchBoardData = useCallback(() => {\n    if (slug) {\n      fetchBoardData(slug);\n    }\n  }, [slug, fetchBoardData]);\n  useEffect(() => {\n    handleFetchBoardData();\n  }, [handleFetchBoardData]);\n\n  // Supabase 연결 상태 확인\n  useEffect(() => {\n    console.log('🔍 Checking Supabase connection...');\n    console.log('Supabase URL:', process.env.REACT_APP_SUPABASE_URL);\n    console.log('Supabase client:', supabase);\n\n    // 간단한 연결 테스트\n    const testConnection = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('boards').select('count').limit(1);\n        if (error) {\n          console.error('❌ Supabase connection test failed:', error);\n        } else {\n          console.log('✅ Supabase connection test successful:', data);\n        }\n      } catch (err) {\n        console.error('❌ Supabase connection error:', err);\n      }\n    };\n    testConnection();\n  }, []);\n\n  // 단순화된 포커스 이벤트 처리\n  useEffect(() => {\n    let focusTimeout = null;\n    let lastFocusTime = 0;\n    const handleFocus = () => {\n      const now = Date.now();\n      if (now - lastFocusTime < 3000) return; // 3초 내 중복 방지\n\n      lastFocusTime = now;\n      console.log('🔍 Window focused - will refresh in 2 seconds');\n      if (focusTimeout) clearTimeout(focusTimeout);\n      focusTimeout = setTimeout(() => {\n        if (currentBoard) {\n          console.log('🔄 Executing focus refresh');\n          handleFetchBoardData();\n        }\n      }, 2000); // 2초 지연\n    };\n    const handleVisibilityChange = () => {\n      if (!document.hidden && currentBoard) {\n        const now = Date.now();\n        if (now - lastFocusTime < 3000) return;\n        lastFocusTime = now;\n        console.log('👁️ Page became visible - will refresh in 2 seconds');\n        if (focusTimeout) clearTimeout(focusTimeout);\n        focusTimeout = setTimeout(() => {\n          console.log('🔄 Executing visibility refresh');\n          handleFetchBoardData();\n        }, 2000); // 2초 지연\n      }\n    };\n    window.addEventListener('focus', handleFocus);\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () => {\n      window.removeEventListener('focus', handleFocus);\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n      if (focusTimeout) clearTimeout(focusTimeout);\n    };\n  }, [currentBoard, handleFetchBoardData]);\n\n  // 주기적 데이터 새로고침 (백업 동기화)\n  useEffect(() => {\n    if (!currentBoard) return;\n    const interval = setInterval(() => {\n      console.log('Periodic data refresh');\n      handleFetchBoardData();\n    }, 30000); // 30초마다 새로고침\n\n    return () => clearInterval(interval);\n  }, [currentBoard, handleFetchBoardData]);\n  useEffect(() => {\n    if (!currentBoard) return;\n    console.log(`🚀 Setting up realtime subscription for board: ${currentBoard.name} (ID: ${currentBoard.id})`);\n\n    // Supabase Realtime 구독 설정\n    let updateTimeout = null;\n    const debouncedUpdate = source => {\n      if (updateTimeout) clearTimeout(updateTimeout);\n      updateTimeout = setTimeout(() => {\n        console.log(`⚡ ${source} change detected - fetching updated board data...`);\n        handleFetchBoardData();\n      }, 500); // 500ms 디바운싱\n    };\n    const channelName = `board-${currentBoard.id}`;\n    console.log(`📡 Creating channel: ${channelName}`);\n    const channel = supabase.channel(channelName).on('postgres_changes', {\n      event: '*',\n      schema: 'public',\n      table: 'columns',\n      filter: `board_id=eq.${currentBoard.id}`\n    }, payload => {\n      console.log('📋 Column change received:', {\n        eventType: payload.eventType,\n        table: payload.table,\n        new: payload.new,\n        old: payload.old\n      });\n      debouncedUpdate('Column');\n    }).on('postgres_changes', {\n      event: '*',\n      schema: 'public',\n      table: 'cards'\n    }, payload => {\n      console.log('🃏 Card change received:', {\n        eventType: payload.eventType,\n        table: payload.table,\n        new: payload.new,\n        old: payload.old\n      });\n      debouncedUpdate('Card');\n    }).subscribe(status => {\n      console.log(`📶 Realtime subscription status: ${status}`);\n      setRealtimeStatus(status);\n      if (status === 'SUBSCRIBED') {\n        console.log('✅ Successfully subscribed to realtime updates');\n        showToast('실시간 동기화가 활성화되었습니다', 'success', 2000);\n      } else if (status === 'CHANNEL_ERROR') {\n        console.error('❌ Realtime subscription error');\n        showToast('실시간 동기화 연결에 문제가 발생했습니다', 'error', 4000);\n      } else if (status === 'TIMED_OUT') {\n        console.error('⏰ Realtime subscription timed out');\n        showToast('실시간 동기화 연결 시간 초과', 'warning', 3000);\n      } else if (status === 'CLOSED') {\n        console.log('🔌 Realtime subscription closed');\n      }\n    });\n    return () => {\n      console.log(`🧹 Cleaning up realtime subscription for ${channelName}`);\n      if (updateTimeout) clearTimeout(updateTimeout);\n      supabase.removeChannel(channel);\n      setRealtimeStatus('DISCONNECTED');\n    };\n  }, [currentBoard, handleFetchBoardData, showToast]);\n\n  // 에러가 있을 때 토스트로 표시하고 자동으로 재시도\n  useEffect(() => {\n    if (!error) return;\n    showToast(`오류 발생: ${error}`, 'error', 5000);\n    // 3초 후 자동 재시도\n    const retryTimer = setTimeout(() => {\n      console.log('Auto retrying due to error...');\n      handleFetchBoardData();\n    }, 3000);\n    return () => clearTimeout(retryTimer);\n  }, [error, handleFetchBoardData, showToast]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-lg text-gray-600\",\n        children: \"\\uBCF4\\uB4DC\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this);\n  }\n  if (error && isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg text-red-600 mb-4\",\n          children: [\"\\uC624\\uB958\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600 mb-4\",\n          children: \"3\\uCD08 \\uD6C4 \\uC790\\uB3D9\\uC73C\\uB85C \\uC7AC\\uC2DC\\uB3C4\\uD569\\uB2C8\\uB2E4...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleFetchBoardData,\n            children: \"\\uC9C0\\uAE08 \\uB2E4\\uC2DC \\uC2DC\\uB3C4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              children: \"\\uD648\\uC73C\\uB85C \\uB3CC\\uC544\\uAC00\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this);\n  }\n  if (!currentBoard) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg text-gray-600 mb-4\",\n          children: \"\\uBCF4\\uB4DC\\uB97C \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uD648\\uC73C\\uB85C \\uB3CC\\uC544\\uAC00\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"bg-white shadow-sm border-b border-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center h-16\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              className: \"text-gray-600 hover:text-gray-900 transition-colors\",\n              children: \"\\u2190 \\uBCF4\\uB4DC \\uBAA9\\uB85D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray-300\",\n              children: \"|\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-lg font-semibold text-gray-900\",\n              children: currentBoard.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                console.log('🔄 Manual refresh triggered');\n                handleFetchBoardData();\n              },\n              className: \"text-sm text-blue-600 hover:text-blue-800 transition-colors\",\n              title: \"\\uC218\\uB3D9 \\uC0C8\\uB85C\\uACE0\\uCE68\",\n              children: \"\\uD83D\\uDD04 \\uC0C8\\uB85C\\uACE0\\uCE68\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-gray-500\",\n                children: realtimeStatus === 'SUBSCRIBED' ? '실시간 동기화 활성화' : realtimeStatus === 'CONNECTING' ? '연결 중...' : realtimeStatus === 'CHANNEL_ERROR' ? '연결 오류' : realtimeStatus === 'TIMED_OUT' ? '연결 시간 초과' : '연결 대기 중'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `w-2 h-2 rounded-full ${realtimeStatus === 'SUBSCRIBED' ? 'bg-green-500' : realtimeStatus === 'CONNECTING' ? 'bg-yellow-500' : realtimeStatus === 'CHANNEL_ERROR' ? 'bg-red-500' : realtimeStatus === 'TIMED_OUT' ? 'bg-orange-500' : 'bg-gray-400'}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n};\n_s(BoardPage, \"yv6gXZ+aEzE3jSp49lLACPMFhkg=\", false, function () {\n  return [useParams, useToast, useBoardStore];\n});\n_c = BoardPage;\nexport default BoardPage;\nvar _c;\n$RefreshReg$(_c, \"BoardPage\");","map":{"version":3,"names":["React","useEffect","useCallback","useState","useParams","Link","Board","Button","useToast","useBoardStore","supabase","jsxDEV","_jsxDEV","BoardPage","_s","slug","showToast","ToastComponent","realtimeStatus","setRealtimeStatus","currentBoard","fetchBoardData","isLoading","error","handleFetchBoardData","console","log","process","env","REACT_APP_SUPABASE_URL","testConnection","data","from","select","limit","err","focusTimeout","lastFocusTime","handleFocus","now","Date","clearTimeout","setTimeout","handleVisibilityChange","document","hidden","window","addEventListener","removeEventListener","interval","setInterval","clearInterval","name","id","updateTimeout","debouncedUpdate","source","channelName","channel","on","event","schema","table","filter","payload","eventType","new","old","subscribe","status","removeChannel","retryTimer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","to","variant","title","_c","$RefreshReg$"],"sources":["/Users/igyeole/Desktop/fastcampus/workspace/03-cursor-vibe-coding/src/pages/BoardPage.jsx"],"sourcesContent":["import React, { useEffect, useCallback, useState } from 'react'\nimport { useParams, Link } from 'react-router-dom'\nimport Board from '../components/board/Board'\nimport Button from '../components/common/Button'\nimport { useToast } from '../components/common/Toast'\nimport useBoardStore from '../store/boardStore'\nimport { supabase } from '../lib/supabaseClient'\n\nconst BoardPage = () => {\n  const { slug } = useParams()\n  const { showToast, ToastComponent } = useToast()\n  const [realtimeStatus, setRealtimeStatus] = useState('DISCONNECTED')\n  const { \n    currentBoard, \n    fetchBoardData, \n    isLoading, \n    error \n  } = useBoardStore()\n\n  const handleFetchBoardData = useCallback(() => {\n    if (slug) {\n      fetchBoardData(slug)\n    }\n  }, [slug, fetchBoardData])\n\n  useEffect(() => {\n    handleFetchBoardData()\n  }, [handleFetchBoardData])\n\n  // Supabase 연결 상태 확인\n  useEffect(() => {\n    console.log('🔍 Checking Supabase connection...')\n    console.log('Supabase URL:', process.env.REACT_APP_SUPABASE_URL)\n    console.log('Supabase client:', supabase)\n    \n    // 간단한 연결 테스트\n    const testConnection = async () => {\n      try {\n        const { data, error } = await supabase.from('boards').select('count').limit(1)\n        if (error) {\n          console.error('❌ Supabase connection test failed:', error)\n        } else {\n          console.log('✅ Supabase connection test successful:', data)\n        }\n      } catch (err) {\n        console.error('❌ Supabase connection error:', err)\n      }\n    }\n    \n    testConnection()\n  }, [])\n\n  // 단순화된 포커스 이벤트 처리\n  useEffect(() => {\n    let focusTimeout = null\n    let lastFocusTime = 0\n\n    const handleFocus = () => {\n      const now = Date.now()\n      if (now - lastFocusTime < 3000) return // 3초 내 중복 방지\n      \n      lastFocusTime = now\n      console.log('🔍 Window focused - will refresh in 2 seconds')\n      \n      if (focusTimeout) clearTimeout(focusTimeout)\n      focusTimeout = setTimeout(() => {\n        if (currentBoard) {\n          console.log('🔄 Executing focus refresh')\n          handleFetchBoardData()\n        }\n      }, 2000) // 2초 지연\n    }\n\n    const handleVisibilityChange = () => {\n      if (!document.hidden && currentBoard) {\n        const now = Date.now()\n        if (now - lastFocusTime < 3000) return\n        \n        lastFocusTime = now\n        console.log('👁️ Page became visible - will refresh in 2 seconds')\n        \n        if (focusTimeout) clearTimeout(focusTimeout)\n        focusTimeout = setTimeout(() => {\n          console.log('🔄 Executing visibility refresh')\n          handleFetchBoardData()\n        }, 2000) // 2초 지연\n      }\n    }\n\n    window.addEventListener('focus', handleFocus)\n    document.addEventListener('visibilitychange', handleVisibilityChange)\n\n    return () => {\n      window.removeEventListener('focus', handleFocus)\n      document.removeEventListener('visibilitychange', handleVisibilityChange)\n      if (focusTimeout) clearTimeout(focusTimeout)\n    }\n  }, [currentBoard, handleFetchBoardData])\n\n  // 주기적 데이터 새로고침 (백업 동기화)\n  useEffect(() => {\n    if (!currentBoard) return\n\n    const interval = setInterval(() => {\n      console.log('Periodic data refresh')\n      handleFetchBoardData()\n    }, 30000) // 30초마다 새로고침\n\n    return () => clearInterval(interval)\n  }, [currentBoard, handleFetchBoardData])\n\n  useEffect(() => {\n    if (!currentBoard) return\n\n    console.log(`🚀 Setting up realtime subscription for board: ${currentBoard.name} (ID: ${currentBoard.id})`)\n    \n    // Supabase Realtime 구독 설정\n    let updateTimeout = null\n    \n    const debouncedUpdate = (source) => {\n      if (updateTimeout) clearTimeout(updateTimeout)\n      updateTimeout = setTimeout(() => {\n        console.log(`⚡ ${source} change detected - fetching updated board data...`)\n        handleFetchBoardData()\n      }, 500) // 500ms 디바운싱\n    }\n\n    const channelName = `board-${currentBoard.id}`\n    console.log(`📡 Creating channel: ${channelName}`)\n    \n    const channel = supabase\n      .channel(channelName)\n      .on(\n        'postgres_changes',\n        {\n          event: '*',\n          schema: 'public',\n          table: 'columns',\n          filter: `board_id=eq.${currentBoard.id}`\n        },\n        (payload) => {\n          console.log('📋 Column change received:', {\n            eventType: payload.eventType,\n            table: payload.table,\n            new: payload.new,\n            old: payload.old\n          })\n          debouncedUpdate('Column')\n        }\n      )\n      .on(\n        'postgres_changes',\n        {\n          event: '*',\n          schema: 'public',\n          table: 'cards'\n        },\n        (payload) => {\n          console.log('🃏 Card change received:', {\n            eventType: payload.eventType,\n            table: payload.table,\n            new: payload.new,\n            old: payload.old\n          })\n          debouncedUpdate('Card')\n        }\n      )\n      .subscribe((status) => {\n        console.log(`📶 Realtime subscription status: ${status}`)\n        setRealtimeStatus(status)\n        \n        if (status === 'SUBSCRIBED') {\n          console.log('✅ Successfully subscribed to realtime updates')\n          showToast('실시간 동기화가 활성화되었습니다', 'success', 2000)\n        } else if (status === 'CHANNEL_ERROR') {\n          console.error('❌ Realtime subscription error')\n          showToast('실시간 동기화 연결에 문제가 발생했습니다', 'error', 4000)\n        } else if (status === 'TIMED_OUT') {\n          console.error('⏰ Realtime subscription timed out')\n          showToast('실시간 동기화 연결 시간 초과', 'warning', 3000)\n        } else if (status === 'CLOSED') {\n          console.log('🔌 Realtime subscription closed')\n        }\n      })\n\n    return () => {\n      console.log(`🧹 Cleaning up realtime subscription for ${channelName}`)\n      if (updateTimeout) clearTimeout(updateTimeout)\n      supabase.removeChannel(channel)\n      setRealtimeStatus('DISCONNECTED')\n    }\n  }, [currentBoard, handleFetchBoardData, showToast])\n\n  // 에러가 있을 때 토스트로 표시하고 자동으로 재시도\n  useEffect(() => {\n    if (!error) return\n\n    showToast(`오류 발생: ${error}`, 'error', 5000)\n    // 3초 후 자동 재시도\n    const retryTimer = setTimeout(() => {\n      console.log('Auto retrying due to error...')\n      handleFetchBoardData()\n    }, 3000)\n    \n    return () => clearTimeout(retryTimer)\n  }, [error, handleFetchBoardData, showToast])\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-lg text-gray-600\">보드를 불러오는 중...</div>\n      </div>\n    )\n  }\n\n  if (error && isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"text-lg text-red-600 mb-4\">\n            오류가 발생했습니다: {error}\n          </div>\n          <div className=\"text-sm text-gray-600 mb-4\">\n            3초 후 자동으로 재시도합니다...\n          </div>\n          <div className=\"space-x-4\">\n            <Button onClick={handleFetchBoardData}>\n              지금 다시 시도\n            </Button>\n            <Link to=\"/\">\n              <Button variant=\"secondary\">\n                홈으로 돌아가기\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  if (!currentBoard) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"text-lg text-gray-600 mb-4\">\n            보드를 찾을 수 없습니다.\n          </div>\n          <Link to=\"/\">\n            <Button>홈으로 돌아가기</Button>\n          </Link>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* 네비게이션 바 */}\n      <nav className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <div className=\"flex items-center space-x-4\">\n              <Link \n                to=\"/\"\n                className=\"text-gray-600 hover:text-gray-900 transition-colors\"\n              >\n                ← 보드 목록\n              </Link>\n              <div className=\"text-gray-300\">|</div>\n              <h1 className=\"text-lg font-semibold text-gray-900\">\n                {currentBoard.name}\n              </h1>\n            </div>\n            \n            <div className=\"flex items-center space-x-4\">\n              <button\n                onClick={() => {\n                  console.log('🔄 Manual refresh triggered')\n                  handleFetchBoardData()\n                }}\n                className=\"text-sm text-blue-600 hover:text-blue-800 transition-colors\"\n                title=\"수동 새로고침\"\n              >\n                🔄 새로고침\n              </button>\n              \n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-sm text-gray-500\">\n                  {realtimeStatus === 'SUBSCRIBED' ? '실시간 동기화 활성화' : \n                   realtimeStatus === 'CONNECTING' ? '연결 중...' : \n                   realtimeStatus === 'CHANNEL_ERROR' ? '연결 오류' : \n                   realtimeStatus === 'TIMED_OUT' ? '연결 시간 초과' :\n                   '연결 대기 중'}\n                </span>\n                <div className={`w-2 h-2 rounded-full ${\n                  realtimeStatus === 'SUBSCRIBED' ? 'bg-green-500' : \n                  realtimeStatus === 'CONNECTING' ? 'bg-yellow-500' : \n                  realtimeStatus === 'CHANNEL_ERROR' ? 'bg-red-500' : \n                  realtimeStatus === 'TIMED_OUT' ? 'bg-orange-500' :\n                  'bg-gray-400'\n                }`}></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      {/* 보드 콘텐츠 */}\n      <Board />\n      \n      {/* Toast 컴포넌트 */}\n      <ToastComponent />\n    </div>\n  )\n}\n\nexport default BoardPage"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}