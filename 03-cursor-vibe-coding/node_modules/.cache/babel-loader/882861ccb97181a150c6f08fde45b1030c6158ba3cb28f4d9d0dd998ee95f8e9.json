{"ast":null,"code":"var _jsxFileName = \"/Users/igyeole/Desktop/fastcampus/workspace/03-cursor-vibe-coding/src/components/board/Board.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DndContext, DragOverlay, closestCorners, KeyboardSensor, PointerSensor, useSensor, useSensors } from '@dnd-kit/core';\nimport { SortableContext, horizontalListSortingStrategy } from '@dnd-kit/sortable';\nimport Column from './Column';\nimport Card from './Card';\nimport Button from '../common/Button';\nimport useBoardStore from '../../store/boardStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const {\n    currentBoard,\n    columns,\n    cards,\n    addColumn,\n    moveCard,\n    isLoading,\n    error\n  } = useBoardStore();\n  const [activeCard, setActiveCard] = useState(null);\n  const [isAddingColumn, setIsAddingColumn] = useState(false);\n  const [newColumnTitle, setNewColumnTitle] = useState('');\n  const sensors = useSensors(useSensor(PointerSensor), useSensor(KeyboardSensor));\n  const handleDragStart = event => {\n    const {\n      active\n    } = event;\n    const card = cards.find(card => card.id === active.id);\n    setActiveCard(card);\n  };\n  const handleDragEnd = async event => {\n    const {\n      active,\n      over\n    } = event;\n    setActiveCard(null);\n    if (!over) return;\n    const activeCard = cards.find(card => card.id === active.id);\n    if (!activeCard) return;\n    const overId = over.id;\n    const overColumn = columns.find(col => col.id === overId);\n    const overCard = cards.find(card => card.id === overId);\n    let newColumnId = activeCard.column_id;\n    let newPosition = activeCard.position;\n    if (overColumn) {\n      // 컬럼 위에 드롭된 경우 - 해당 컬럼의 마지막 위치에 추가\n      newColumnId = overColumn.id;\n      const columnCards = cards.filter(card => card.column_id === overColumn.id && card.id !== activeCard.id);\n      newPosition = columnCards.length;\n    } else if (overCard && overCard.id !== activeCard.id) {\n      // 다른 카드 위에 드롭된 경우\n      newColumnId = overCard.column_id;\n\n      // 모든 컬럼 카드를 가져와서 정렬 (activeCard 제외하지 않음)\n      const allColumnCards = cards.filter(card => card.column_id === overCard.column_id).sort((a, b) => a.position - b.position);\n      const overIndex = allColumnCards.findIndex(card => card.id === overCard.id);\n\n      // 같은 컬럼 내에서 이동하는 경우\n      if (newColumnId === activeCard.column_id) {\n        const activeIndex = allColumnCards.findIndex(card => card.id === activeCard.id);\n\n        // 위로 이동하는 경우\n        if (activeIndex > overIndex) {\n          newPosition = overIndex;\n        } else {\n          // 아래로 이동하는 경우\n          newPosition = overIndex;\n        }\n      } else {\n        // 다른 컬럼으로 이동하는 경우\n        newPosition = overIndex;\n      }\n    }\n\n    // 실제로 위치가 변경된 경우에만 업데이트\n    if (newColumnId !== activeCard.column_id || newPosition !== activeCard.position) {\n      console.log('Moving card:', {\n        cardId: activeCard.id,\n        from: {\n          columnId: activeCard.column_id,\n          position: activeCard.position\n        },\n        to: {\n          columnId: newColumnId,\n          position: newPosition\n        }\n      });\n\n      // 카드 이동 및 다른 카드들 위치 재정렬\n      await reorderCardsAndMove(activeCard, newColumnId, newPosition);\n    }\n  };\n\n  // 카드 이동 및 다른 카드들 위치 재정렬\n  const reorderCardsAndMove = async (activeCard, newColumnId, newPosition) => {\n    try {\n      // 1. 먼저 이동할 카드의 새 위치 설정\n      await moveCard(activeCard.id, newColumnId, newPosition);\n\n      // 2. 같은 컬럼 내의 다른 카드들 위치 재정렬\n      const targetColumnCards = cards.filter(card => card.column_id === newColumnId && card.id !== activeCard.id).sort((a, b) => a.position - b.position);\n\n      // 3. 새로운 위치에 따라 다른 카드들의 position 업데이트\n      const updates = [];\n      targetColumnCards.forEach((card, index) => {\n        const expectedPosition = index >= newPosition ? index + 1 : index;\n        if (card.position !== expectedPosition) {\n          updates.push({\n            cardId: card.id,\n            position: expectedPosition\n          });\n        }\n      });\n\n      // 4. 원래 컬럼이 다른 경우, 원래 컬럼의 카드들도 재정렬\n      if (activeCard.column_id !== newColumnId) {\n        const originalColumnCards = cards.filter(card => card.column_id === activeCard.column_id && card.id !== activeCard.id).sort((a, b) => a.position - b.position);\n        originalColumnCards.forEach((card, index) => {\n          if (card.position !== index) {\n            updates.push({\n              cardId: card.id,\n              position: index\n            });\n          }\n        });\n      }\n\n      // 5. 일괄 업데이트 실행\n      if (updates.length > 0) {\n        console.log('Updating card positions:', updates);\n        for (const update of updates) {\n          await moveCard(update.cardId, null, update.position);\n        }\n      }\n    } catch (error) {\n      console.error('Error reordering cards:', error);\n    }\n  };\n  const handleAddColumn = async () => {\n    if (newColumnTitle.trim()) {\n      await addColumn(newColumnTitle.trim());\n      setNewColumnTitle('');\n      setIsAddingColumn(false);\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-64\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-lg text-gray-600\",\n        children: \"\\uB85C\\uB529 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-64\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-lg text-red-600\",\n        children: [\"\\uC624\\uB958: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this);\n  }\n  if (!currentBoard) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-64\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-lg text-gray-600\",\n        children: \"\\uBCF4\\uB4DC\\uB97C \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-full flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-shrink-0 p-6 border-b border-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-gray-900\",\n        children: currentBoard.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 p-4 md:p-6 overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(DndContext, {\n        sensors: sensors,\n        collisionDetection: closestCorners,\n        onDragStart: handleDragStart,\n        onDragEnd: handleDragEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-4 md:space-x-6 min-h-full pb-4\",\n          children: [/*#__PURE__*/_jsxDEV(SortableContext, {\n            items: columns.map(col => col.id),\n            strategy: horizontalListSortingStrategy,\n            children: columns.sort((a, b) => a.position - b.position).map(column => /*#__PURE__*/_jsxDEV(Column, {\n              column: column\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-shrink-0 w-72 md:w-80\",\n            children: isAddingColumn ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-100 rounded-lg p-4 space-y-3 shadow-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newColumnTitle,\n                onChange: e => setNewColumnTitle(e.target.value),\n                placeholder: \"\\uCEEC\\uB7FC \\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n                className: \"w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all\",\n                autoFocus: true,\n                onKeyPress: e => {\n                  if (e.key === 'Enter') {\n                    handleAddColumn();\n                  }\n                  if (e.key === 'Escape') {\n                    setIsAddingColumn(false);\n                    setNewColumnTitle('');\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  onClick: handleAddColumn,\n                  disabled: !newColumnTitle.trim(),\n                  children: \"\\uCD94\\uAC00\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  variant: \"secondary\",\n                  onClick: () => {\n                    setIsAddingColumn(false);\n                    setNewColumnTitle('');\n                  },\n                  children: \"\\uCDE8\\uC18C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline\",\n              onClick: () => setIsAddingColumn(true),\n              className: \"w-full h-12 border-2 border-dashed border-gray-300 hover:border-gray-400 hover:bg-gray-50 transition-all duration-200 text-gray-600 hover:text-gray-700\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-lg mr-2\",\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this), \"\\uCEEC\\uB7FC \\uCD94\\uAC00\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DragOverlay, {\n          children: activeCard ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rotate-3 scale-105 shadow-2xl\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              card: activeCard\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"7wOxcAzlsxoPPijvviARZ4c4kSI=\", false, function () {\n  return [useBoardStore, useSensors, useSensor, useSensor];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","DndContext","DragOverlay","closestCorners","KeyboardSensor","PointerSensor","useSensor","useSensors","SortableContext","horizontalListSortingStrategy","Column","Card","Button","useBoardStore","jsxDEV","_jsxDEV","Board","_s","currentBoard","columns","cards","addColumn","moveCard","isLoading","error","activeCard","setActiveCard","isAddingColumn","setIsAddingColumn","newColumnTitle","setNewColumnTitle","sensors","handleDragStart","event","active","card","find","id","handleDragEnd","over","overId","overColumn","col","overCard","newColumnId","column_id","newPosition","position","columnCards","filter","length","allColumnCards","sort","a","b","overIndex","findIndex","activeIndex","console","log","cardId","from","columnId","to","reorderCardsAndMove","targetColumnCards","updates","forEach","index","expectedPosition","push","originalColumnCards","update","handleAddColumn","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","collisionDetection","onDragStart","onDragEnd","items","map","strategy","column","type","value","onChange","e","target","placeholder","autoFocus","onKeyPress","key","size","onClick","disabled","variant","_c","$RefreshReg$"],"sources":["/Users/igyeole/Desktop/fastcampus/workspace/03-cursor-vibe-coding/src/components/board/Board.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  DndContext,\n  DragOverlay,\n  closestCorners,\n  KeyboardSensor,\n  PointerSensor,\n  useSensor,\n  useSensors,\n} from '@dnd-kit/core'\nimport { SortableContext, horizontalListSortingStrategy } from '@dnd-kit/sortable'\nimport Column from './Column'\nimport Card from './Card'\nimport Button from '../common/Button'\nimport useBoardStore from '../../store/boardStore'\n\nconst Board = () => {\n  const { \n    currentBoard, \n    columns, \n    cards,\n    addColumn, \n    moveCard,\n    isLoading,\n    error \n  } = useBoardStore()\n  \n  const [activeCard, setActiveCard] = useState(null)\n  const [isAddingColumn, setIsAddingColumn] = useState(false)\n  const [newColumnTitle, setNewColumnTitle] = useState('')\n\n  const sensors = useSensors(\n    useSensor(PointerSensor),\n    useSensor(KeyboardSensor)\n  )\n\n  const handleDragStart = (event) => {\n    const { active } = event\n    const card = cards.find(card => card.id === active.id)\n    setActiveCard(card)\n  }\n\n  const handleDragEnd = async (event) => {\n    const { active, over } = event\n    setActiveCard(null)\n\n    if (!over) return\n\n    const activeCard = cards.find(card => card.id === active.id)\n    if (!activeCard) return\n\n    const overId = over.id\n    const overColumn = columns.find(col => col.id === overId)\n    const overCard = cards.find(card => card.id === overId)\n\n    let newColumnId = activeCard.column_id\n    let newPosition = activeCard.position\n\n    if (overColumn) {\n      // 컬럼 위에 드롭된 경우 - 해당 컬럼의 마지막 위치에 추가\n      newColumnId = overColumn.id\n      const columnCards = cards.filter(card => card.column_id === overColumn.id && card.id !== activeCard.id)\n      newPosition = columnCards.length\n    } else if (overCard && overCard.id !== activeCard.id) {\n      // 다른 카드 위에 드롭된 경우\n      newColumnId = overCard.column_id\n      \n      // 모든 컬럼 카드를 가져와서 정렬 (activeCard 제외하지 않음)\n      const allColumnCards = cards\n        .filter(card => card.column_id === overCard.column_id)\n        .sort((a, b) => a.position - b.position)\n      \n      const overIndex = allColumnCards.findIndex(card => card.id === overCard.id)\n      \n      // 같은 컬럼 내에서 이동하는 경우\n      if (newColumnId === activeCard.column_id) {\n        const activeIndex = allColumnCards.findIndex(card => card.id === activeCard.id)\n        \n        // 위로 이동하는 경우\n        if (activeIndex > overIndex) {\n          newPosition = overIndex\n        } else {\n          // 아래로 이동하는 경우\n          newPosition = overIndex\n        }\n      } else {\n        // 다른 컬럼으로 이동하는 경우\n        newPosition = overIndex\n      }\n    }\n\n    // 실제로 위치가 변경된 경우에만 업데이트\n    if (newColumnId !== activeCard.column_id || newPosition !== activeCard.position) {\n      console.log('Moving card:', {\n        cardId: activeCard.id,\n        from: { columnId: activeCard.column_id, position: activeCard.position },\n        to: { columnId: newColumnId, position: newPosition }\n      })\n      \n      // 카드 이동 및 다른 카드들 위치 재정렬\n      await reorderCardsAndMove(activeCard, newColumnId, newPosition)\n    }\n  }\n\n  // 카드 이동 및 다른 카드들 위치 재정렬\n  const reorderCardsAndMove = async (activeCard, newColumnId, newPosition) => {\n    try {\n      // 1. 먼저 이동할 카드의 새 위치 설정\n      await moveCard(activeCard.id, newColumnId, newPosition)\n      \n      // 2. 같은 컬럼 내의 다른 카드들 위치 재정렬\n      const targetColumnCards = cards\n        .filter(card => card.column_id === newColumnId && card.id !== activeCard.id)\n        .sort((a, b) => a.position - b.position)\n      \n      // 3. 새로운 위치에 따라 다른 카드들의 position 업데이트\n      const updates = []\n      \n      targetColumnCards.forEach((card, index) => {\n        const expectedPosition = index >= newPosition ? index + 1 : index\n        if (card.position !== expectedPosition) {\n          updates.push({ cardId: card.id, position: expectedPosition })\n        }\n      })\n      \n      // 4. 원래 컬럼이 다른 경우, 원래 컬럼의 카드들도 재정렬\n      if (activeCard.column_id !== newColumnId) {\n        const originalColumnCards = cards\n          .filter(card => card.column_id === activeCard.column_id && card.id !== activeCard.id)\n          .sort((a, b) => a.position - b.position)\n        \n        originalColumnCards.forEach((card, index) => {\n          if (card.position !== index) {\n            updates.push({ cardId: card.id, position: index })\n          }\n        })\n      }\n      \n      // 5. 일괄 업데이트 실행\n      if (updates.length > 0) {\n        console.log('Updating card positions:', updates)\n        for (const update of updates) {\n          await moveCard(update.cardId, null, update.position)\n        }\n      }\n    } catch (error) {\n      console.error('Error reordering cards:', error)\n    }\n  }\n\n  const handleAddColumn = async () => {\n    if (newColumnTitle.trim()) {\n      await addColumn(newColumnTitle.trim())\n      setNewColumnTitle('')\n      setIsAddingColumn(false)\n    }\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"text-lg text-gray-600\">로딩 중...</div>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"text-lg text-red-600\">오류: {error}</div>\n      </div>\n    )\n  }\n\n  if (!currentBoard) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"text-lg text-gray-600\">보드를 찾을 수 없습니다.</div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      {/* 보드 헤더 */}\n      <div className=\"flex-shrink-0 p-6 border-b border-gray-200\">\n        <h1 className=\"text-2xl font-bold text-gray-900\">\n          {currentBoard.name}\n        </h1>\n      </div>\n\n      {/* 보드 콘텐츠 */}\n      <div className=\"flex-1 p-4 md:p-6 overflow-x-auto\">\n        <DndContext\n          sensors={sensors}\n          collisionDetection={closestCorners}\n          onDragStart={handleDragStart}\n          onDragEnd={handleDragEnd}\n        >\n          <div className=\"flex space-x-4 md:space-x-6 min-h-full pb-4\">\n            <SortableContext\n              items={columns.map(col => col.id)}\n              strategy={horizontalListSortingStrategy}\n            >\n              {columns\n                .sort((a, b) => a.position - b.position)\n                .map(column => (\n                  <Column key={column.id} column={column} />\n                ))}\n            </SortableContext>\n\n            {/* 컬럼 추가 */}\n            <div className=\"flex-shrink-0 w-72 md:w-80\">\n              {isAddingColumn ? (\n                <div className=\"bg-gray-100 rounded-lg p-4 space-y-3 shadow-sm\">\n                  <input\n                    type=\"text\"\n                    value={newColumnTitle}\n                    onChange={(e) => setNewColumnTitle(e.target.value)}\n                    placeholder=\"컬럼 제목을 입력하세요...\"\n                    className=\"w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all\"\n                    autoFocus\n                    onKeyPress={(e) => {\n                      if (e.key === 'Enter') {\n                        handleAddColumn()\n                      }\n                      if (e.key === 'Escape') {\n                        setIsAddingColumn(false)\n                        setNewColumnTitle('')\n                      }\n                    }}\n                  />\n                  <div className=\"flex space-x-2\">\n                    <Button \n                      size=\"small\" \n                      onClick={handleAddColumn}\n                      disabled={!newColumnTitle.trim()}\n                    >\n                      추가\n                    </Button>\n                    <Button \n                      size=\"small\" \n                      variant=\"secondary\" \n                      onClick={() => {\n                        setIsAddingColumn(false)\n                        setNewColumnTitle('')\n                      }}\n                    >\n                      취소\n                    </Button>\n                  </div>\n                </div>\n              ) : (\n                <Button\n                  variant=\"outline\"\n                  onClick={() => setIsAddingColumn(true)}\n                  className=\"w-full h-12 border-2 border-dashed border-gray-300 hover:border-gray-400 hover:bg-gray-50 transition-all duration-200 text-gray-600 hover:text-gray-700\"\n                >\n                  <span className=\"text-lg mr-2\">+</span>\n                  컬럼 추가\n                </Button>\n              )}\n            </div>\n          </div>\n\n          <DragOverlay>\n            {activeCard ? (\n              <div className=\"rotate-3 scale-105 shadow-2xl\">\n                <Card card={activeCard} />\n              </div>\n            ) : null}\n          </DragOverlay>\n        </DndContext>\n      </div>\n    </div>\n  )\n}\n\nexport default Board"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}